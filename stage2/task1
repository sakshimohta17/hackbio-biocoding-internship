#https://github.com/sakshimohta17/hackbio-biocoding-internship/blob/main/stage2/task1
#www.linkedin.com/in/sakshimohta1705

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import ttest_ind

# Task Code 2.1: Microbiology - Growth Curves Analysis
data_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/Python/Dataset/mcgc.tsv"
df = pd.read_csv(data_url, sep='\t')

# Plot growth curves for different strains
plt.figure(figsize=(12, 6))
for strain in df['Strain'].unique():
    strain_data = df[df['Strain'] == strain]
    plt.plot(strain_data['Time'], strain_data['OD600'], label=strain)
plt.xlabel("Time (hours)")
plt.ylabel("OD600 (Optical Density)")
plt.title("Growth Curves for Different Strains")
plt.legend()
plt.show()

# Task Code 2.3: Botany - Metabolic Response Analysis
# Simulated data assuming similar dataset structure
botany_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/main/Python/Dataset/botany.tsv"
botany_df = pd.read_csv(botany_url, sep='\t')

botany_df['DeltaM'] = botany_df['Metabolic_24hr'] - botany_df['DMSO_Treatment']
sns.scatterplot(x=botany_df['WildType'], y=botany_df['DeltaM'], hue=botany_df['Mutant'])
plt.title("Difference in Metabolic Response (Î”M) for WildType and Mutants")
plt.show()

# Task Code 2.4: Biochemistry & Oncology - Protein Mutations Analysis
sift_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/main/Python/Dataset/sift.tsv"
foldx_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/main/Python/Dataset/foldx.tsv"
sift_df = pd.read_csv(sift_url, sep='\t')
foldx_df = pd.read_csv(foldx_url, sep='\t')

sift_df['specific_Protein_aa'] = sift_df['Protein'] + '_' + sift_df['Amino_acid']
foldx_df['specific_Protein_aa'] = foldx_df['Protein'] + '_' + foldx_df['Amino_acid']
merged_df = pd.merge(sift_df, foldx_df, on='specific_Protein_aa')

deleterious = merged_df[(merged_df['SIFT_Score'] < 0.05) & (merged_df['FoldX_Score'] > 2)]
print("Deleterious Mutations:", deleterious.shape)

# Task Code 2.6: Transcriptomics - RNA-Seq Analysis
rna_seq_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/main/Python/Dataset/rna_seq.tsv"
rna_df = pd.read_csv(rna_seq_url, sep='\t')

upregulated = rna_df[(rna_df['Log2FC'] > 1) & (rna_df['pvalue'] < 0.01)]
downregulated = rna_df[(rna_df['Log2FC'] < -1) & (rna_df['pvalue'] < 0.01)]
print("Top 5 Upregulated Genes:", upregulated.head())
print("Top 5 Downregulated Genes:", downregulated.head())

# Task Code 2.7: Public Health - NHANES Data Analysis
nhanes_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/main/Python/Dataset/nhanes.tsv"
nhanes_df = pd.read_csv(nhanes_url, sep='\t')

# Handling missing values
nhanes_df.fillna(0, inplace=True)

# Histogram of BMI, Weight, Age
sns.histplot(nhanes_df['BMI'], kde=True, color='blue', label='BMI')
sns.histplot(nhanes_df['Weight'], kde=True, color='red', label='Weight')
sns.histplot(nhanes_df['Age'], kde=True, color='green', label='Age')
plt.legend()
plt.show()

# T-tests
age_gender_ttest = ttest_ind(nhanes_df['Age'], nhanes_df['Gender'])
bmi_diabetes_ttest = ttest_ind(nhanes_df['BMI'], nhanes_df['Diabetes'])

print("T-test results:", age_gender_ttest.pvalue, bmi_diabetes_ttest.pvalue)

